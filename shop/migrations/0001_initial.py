# Generated by Django 4.0.1 on 2022-03-09 08:17

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=60, verbose_name='Название')),
                ('slug', models.SlugField(max_length=60, unique=True, verbose_name='Ссылка')),
                ('description', models.TextField(verbose_name='Описание')),
                ('image', models.ImageField(upload_to='brand_photos', verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'Бренд',
                'verbose_name_plural': 'Бренды',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название')),
                ('code', models.CharField(max_length=20, verbose_name='Код')),
                ('description', models.TextField(verbose_name='Описание')),
                ('slug', models.SlugField(max_length=60, unique=True, verbose_name='Ссылка')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='collection_images', verbose_name='Изображение')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Стоимость')),
                ('manufacturer', models.CharField(default='Schneider Electric', max_length=60, verbose_name='Производитель')),
            ],
            options={
                'verbose_name': 'Коллекция',
                'verbose_name_plural': 'Коллекции',
            },
        ),
        migrations.CreateModel(
            name='CollectionOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название')),
                ('slug', models.SlugField(max_length=60, unique=True, verbose_name='Ссылка')),
            ],
            options={
                'verbose_name': 'Предложение для коллекций',
                'verbose_name_plural': 'Предложения для коллекций',
            },
        ),
        migrations.CreateModel(
            name='ComputerSocket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название')),
                ('slug', models.SlugField(max_length=60, unique=True, verbose_name='Ссылка')),
                ('code', models.CharField(max_length=20, verbose_name='Код')),
                ('description', models.TextField(verbose_name='Описание')),
                ('manufacturer', models.CharField(blank=True, default='Schneider Electric', max_length=60, null=True, verbose_name='Производитель')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Стоимость')),
                ('stock', models.IntegerField(default=0, verbose_name='Количество')),
                ('availability', models.BooleanField(default=True, verbose_name='Наличие')),
                ('computer_socket_type', models.CharField(max_length=40, verbose_name='Тип')),
                ('montage', models.CharField(max_length=20, verbose_name='Монтаж')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='computer_socket_images', verbose_name='Изображение')),
                ('rated_current', models.CharField(max_length=20, verbose_name='Номинальный ток')),
                ('socket', models.CharField(max_length=20, verbose_name='Розетка')),
                ('grounding', models.BooleanField(default=True, verbose_name='Заземление')),
                ('protection', models.CharField(max_length=20, verbose_name='Пылевлагозащищенность')),
                ('kids_protection', models.BooleanField(blank=True, verbose_name='Защита от детей')),
                ('material', models.CharField(max_length=20, verbose_name='Материал')),
            ],
            options={
                'verbose_name': 'Компьютерная розетка',
                'verbose_name_plural': '5. Компьютерные розетки',
            },
        ),
        migrations.CreateModel(
            name='Dimmer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название')),
                ('slug', models.SlugField(max_length=60, unique=True, verbose_name='Ссылка')),
                ('code', models.CharField(max_length=20, verbose_name='Код')),
                ('description', models.TextField(verbose_name='Описание')),
                ('manufacturer', models.CharField(blank=True, default='Schneider Electric', max_length=60, null=True, verbose_name='Производитель')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Стоимость')),
                ('stock', models.IntegerField(default=0, verbose_name='Количество')),
                ('availability', models.BooleanField(default=True, verbose_name='Наличие')),
                ('dimmer_type', models.CharField(max_length=20, verbose_name='Тип')),
                ('montage', models.CharField(max_length=20, verbose_name='Монтаж')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='dimmer_images', verbose_name='Изображение')),
                ('terminal', models.CharField(max_length=20, verbose_name='Клемма')),
                ('grounding', models.BooleanField(default=True, verbose_name='Заземление')),
                ('three_phase_socket', models.BooleanField(default=False, verbose_name='Трехфазная розетка')),
                ('control', models.CharField(max_length=60, verbose_name='Управление')),
                ('protection', models.CharField(max_length=20, verbose_name='Пылевлагозащищенность')),
                ('kids_protection', models.BooleanField(blank=True, verbose_name='Защита от детей')),
                ('backlight', models.BooleanField(default=False, verbose_name='Подсветка')),
                ('peculiarities', models.CharField(max_length=60, verbose_name='Особенности')),
                ('material', models.CharField(max_length=20, verbose_name='Материал')),
                ('equipment', models.CharField(max_length=60, verbose_name='Комплектация')),
                ('width', models.IntegerField(default=0, verbose_name='Ширина')),
                ('height', models.IntegerField(default=0, verbose_name='Высота')),
                ('depth', models.IntegerField(default=0, verbose_name='Глубина')),
            ],
            options={
                'verbose_name': 'Диммер',
                'verbose_name_plural': '6. Диммеры',
            },
        ),
        migrations.CreateModel(
            name='Frame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название')),
                ('slug', models.SlugField(max_length=60, unique=True, verbose_name='Ссылка')),
                ('code', models.CharField(max_length=20, verbose_name='Код')),
                ('description', models.TextField(verbose_name='Описание')),
                ('manufacturer', models.CharField(blank=True, default='Schneider Electric', max_length=60, null=True, verbose_name='Производитель')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Стоимость')),
                ('stock', models.IntegerField(default=0, verbose_name='Количество')),
                ('availability', models.BooleanField(default=True, verbose_name='Наличие')),
                ('frame_type', models.CharField(max_length=40, verbose_name='Тип')),
                ('frame_places', models.IntegerField(default=1, verbose_name='Количество мест в рамке')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='frame_images', verbose_name='Изображение')),
                ('material', models.CharField(max_length=20, verbose_name='Материал')),
                ('equipment', models.CharField(max_length=60, verbose_name='Комплектация')),
                ('width', models.IntegerField(default=0, verbose_name='Ширина')),
                ('height', models.IntegerField(default=0, verbose_name='Высота')),
                ('depth', models.IntegerField(default=0, verbose_name='Глубина')),
            ],
            options={
                'verbose_name': 'Рамка',
                'verbose_name_plural': '3. Рамки',
            },
        ),
        migrations.CreateModel(
            name='NetworkFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название')),
                ('slug', models.SlugField(max_length=60, unique=True, verbose_name='Ссылка')),
                ('code', models.CharField(max_length=20, verbose_name='Код')),
                ('description', models.TextField(verbose_name='Описание')),
                ('manufacturer', models.CharField(blank=True, default='Schneider Electric', max_length=60, null=True, verbose_name='Производитель')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Стоимость')),
                ('stock', models.IntegerField(default=0, verbose_name='Количество')),
                ('availability', models.BooleanField(default=True, verbose_name='Наличие')),
                ('network_filter_type', models.CharField(max_length=30, verbose_name='Тип')),
                ('output_sockets', models.CharField(max_length=30, verbose_name='Выходные розетки')),
                ('total_number_of_outlets', models.IntegerField(default=4, verbose_name='Общее количество выходных розеток')),
                ('input_socket', models.CharField(max_length=30, verbose_name='Входная розетка')),
                ('avr', models.BooleanField(default=False, verbose_name='Автоматическая стабилизация напряжения')),
                ('power_cable', models.IntegerField(default=5, verbose_name='Кабель питания, м.')),
                ('protective_shutters', models.BooleanField(default=False, verbose_name='Защитные шторки/крышки на розетках')),
                ('separate_switches', models.BooleanField(default=False, verbose_name='Раздельные выключатели')),
                ('remote_control_wi_fi', models.BooleanField(default=False, verbose_name='Удаленное управление (Wi-Fi)')),
                ('nineteen_rack_mounting', models.BooleanField(default=False, verbose_name="Монтаж в 19' стойку")),
                ('wall_mount', models.BooleanField(default=False, verbose_name='Крепление к стене')),
                ('rated_current', models.IntegerField(default=220, verbose_name='Номинальное входное напряжение, В')),
                ('max_input_pulse_energy', models.IntegerField(default=125, verbose_name='Макс. энергия входного импульса, Дж')),
                ('max_load_current', models.IntegerField(default=10, verbose_name='Макс. ток нагрузки, А')),
                ('communication_line_protection', models.BooleanField(default=False, verbose_name='Защита линий связи')),
                ('indication', models.CharField(max_length=60, verbose_name='Индикация')),
                ('usb_ports', models.IntegerField(default=0, verbose_name='Usb-порты')),
                ('overheat_protection', models.BooleanField(default=False, verbose_name='Защита от перегрева')),
                ('load_short_circuit_protection', models.BooleanField(default=False, verbose_name='Защита от КЗ')),
                ('over_voltage_protection', models.BooleanField(default=False, verbose_name='Защита от повышения напряжения')),
                ('remote_control', models.BooleanField(blank=True, verbose_name='Пульт ДУ')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='networkfilter_images', verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'Сетевой фильтр',
                'verbose_name_plural': '8. Сетевые фильтры',
            },
        ),
        migrations.CreateModel(
            name='Plug',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название')),
                ('slug', models.SlugField(max_length=60, unique=True, verbose_name='Ссылка')),
                ('code', models.CharField(max_length=20, verbose_name='Код')),
                ('description', models.TextField(verbose_name='Описание')),
                ('manufacturer', models.CharField(blank=True, default='Schneider Electric', max_length=60, null=True, verbose_name='Производитель')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Стоимость')),
                ('stock', models.IntegerField(default=0, verbose_name='Количество')),
                ('availability', models.BooleanField(default=True, verbose_name='Наличие')),
                ('plug_type', models.CharField(max_length=40, verbose_name='Тип')),
                ('montage', models.CharField(max_length=20, verbose_name='Монтаж')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='plug_images', verbose_name='Изображение')),
                ('protection', models.CharField(max_length=20, verbose_name='Пылевлагозащищенность')),
                ('backlight', models.BooleanField(default=False, verbose_name='Подсветка')),
                ('peculiarities', models.CharField(max_length=60, verbose_name='Особенности')),
                ('material', models.CharField(max_length=20, verbose_name='Материал')),
                ('width', models.IntegerField(default=0, verbose_name='Ширина')),
                ('height', models.IntegerField(default=0, verbose_name='Высота')),
                ('depth', models.IntegerField(default=0, verbose_name='Глубина')),
            ],
            options={
                'verbose_name': 'Заглушка',
                'verbose_name_plural': '4. Заглушки',
            },
        ),
        migrations.CreateModel(
            name='ProductOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название')),
                ('slug', models.SlugField(max_length=60, unique=True, verbose_name='Ссылка')),
            ],
            options={
                'verbose_name': 'Предложение для товаров',
                'verbose_name_plural': 'Предложения для товаров',
            },
        ),
        migrations.CreateModel(
            name='Socket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название')),
                ('slug', models.SlugField(max_length=60, unique=True, verbose_name='Ссылка')),
                ('code', models.CharField(max_length=20, verbose_name='Код')),
                ('description', models.TextField(verbose_name='Описание')),
                ('manufacturer', models.CharField(blank=True, default='Schneider Electric', max_length=60, null=True, verbose_name='Производитель')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Стоимость')),
                ('stock', models.IntegerField(default=0, verbose_name='Количество')),
                ('availability', models.BooleanField(default=True, verbose_name='Наличие')),
                ('socket_type', models.CharField(max_length=20, verbose_name='Тип')),
                ('montage', models.CharField(max_length=20, verbose_name='Монтаж')),
                ('terminal', models.CharField(max_length=20, verbose_name='Клемма')),
                ('rated_current', models.CharField(max_length=20, verbose_name='Номинальный ток')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='socket_images', verbose_name='Изображение')),
                ('socket', models.CharField(max_length=20, verbose_name='Розетка')),
                ('grounding', models.BooleanField(default=True, verbose_name='Заземление')),
                ('protection', models.CharField(max_length=20, verbose_name='Пылевлагозащищенность')),
                ('kids_protection', models.BooleanField(blank=True, verbose_name='Защита от детей')),
                ('backlight', models.BooleanField(default=False, verbose_name='Подсветка')),
                ('material', models.CharField(max_length=20, verbose_name='Материал')),
                ('equipment', models.CharField(max_length=60, verbose_name='Комплектация')),
                ('width', models.IntegerField(default=0, verbose_name='Ширина')),
                ('height', models.IntegerField(default=0, verbose_name='Высота')),
                ('depth', models.IntegerField(default=0, verbose_name='Глубина')),
            ],
            options={
                'verbose_name': 'Розетка',
                'verbose_name_plural': '1. Розетки',
            },
        ),
        migrations.CreateModel(
            name='Switch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название')),
                ('slug', models.SlugField(max_length=60, unique=True, verbose_name='Ссылка')),
                ('code', models.CharField(max_length=20, verbose_name='Код')),
                ('description', models.TextField(verbose_name='Описание')),
                ('manufacturer', models.CharField(blank=True, default='Schneider Electric', max_length=60, null=True, verbose_name='Производитель')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Стоимость')),
                ('stock', models.IntegerField(default=0, verbose_name='Количество')),
                ('availability', models.BooleanField(default=True, verbose_name='Наличие')),
                ('switch_type', models.CharField(max_length=40, verbose_name='Тип')),
                ('montage', models.CharField(max_length=20, verbose_name='Монтаж')),
                ('terminal', models.CharField(max_length=20, verbose_name='Клемма')),
                ('rated_current', models.CharField(max_length=20, verbose_name='Номинальный ток')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='switch_images', verbose_name='Изображение')),
                ('control', models.CharField(max_length=60, verbose_name='Управление')),
                ('frame_places', models.IntegerField(default=1, verbose_name='Количество мест в рамке')),
                ('protection', models.CharField(max_length=20, verbose_name='Пылевлагозащищенность')),
                ('backlight', models.BooleanField(default=False, verbose_name='Подсветка')),
                ('material', models.CharField(max_length=20, verbose_name='Материал')),
                ('equipment', models.CharField(max_length=60, verbose_name='Комплектация')),
                ('width', models.IntegerField(default=0, verbose_name='Ширина')),
                ('height', models.IntegerField(default=0, verbose_name='Высота')),
                ('depth', models.IntegerField(default=0, verbose_name='Глубина')),
            ],
            options={
                'verbose_name': 'Переключатель',
                'verbose_name_plural': '2. Переключатели',
            },
        ),
        migrations.CreateModel(
            name='Thermostat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название')),
                ('slug', models.SlugField(max_length=60, unique=True, verbose_name='Ссылка')),
                ('code', models.CharField(max_length=20, verbose_name='Код')),
                ('description', models.TextField(verbose_name='Описание')),
                ('manufacturer', models.CharField(blank=True, default='Schneider Electric', max_length=60, null=True, verbose_name='Производитель')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Стоимость')),
                ('stock', models.IntegerField(default=0, verbose_name='Количество')),
                ('availability', models.BooleanField(default=True, verbose_name='Наличие')),
                ('thermostat_type', models.CharField(max_length=30, verbose_name='Тип')),
                ('is_smart_home_system_device', models.BooleanField(default=False, verbose_name="Устройство системы 'Умный дом'")),
                ('appointment', models.CharField(max_length=60, verbose_name='Назначение')),
                ('control', models.CharField(max_length=60, verbose_name='Управление')),
                ('display', models.CharField(max_length=60, verbose_name='Экран')),
                ('air_temperature_sensor', models.BooleanField(blank=True, verbose_name='Датчик температуры воздуха')),
                ('floor_temperature_sensor', models.BooleanField(blank=True, verbose_name='Датчик температуры пола')),
                ('wi_fi_control', models.BooleanField(blank=True, default=False, verbose_name='Управление через Wi-Fi')),
                ('remote_control', models.BooleanField(blank=True, verbose_name='Пульт ДУ')),
                ('montage', models.CharField(max_length=20, verbose_name='Монтаж')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='thermostat_images', verbose_name='Изображение')),
                ('temperature_range', models.CharField(max_length=60, verbose_name='Диапазон температур')),
                ('remote_sensor_wire_length', models.IntegerField(default=3, verbose_name='Длина провода выносного датчика, м.')),
                ('temperature_hysteresis', models.FloatField(default=0, verbose_name='Температурный гистерезис, °C')),
                ('maximum_load_current', models.IntegerField(default=16, verbose_name='Максимальный ток нагрузки, А')),
                ('maximum_load_power', models.IntegerField(default=3000, verbose_name='Максимальная мощность нагрузки, Вт')),
                ('correction_of_sensor_readings', models.IntegerField(default=10, verbose_name='Коррекция показаний датчика, °C')),
                ('sensor_connection_diagnostics', models.BooleanField(default=True, verbose_name='Диагностика подключения датчика')),
                ('protection_class', models.CharField(default='IP20', max_length=20, verbose_name='Класс защиты корпуса')),
                ('kids_protection', models.BooleanField(default=False, verbose_name='Защита от детей')),
                ('num_of_programs', models.IntegerField(default=0, verbose_name='Количество программ')),
                ('num_of_intervals_per_day', models.IntegerField(default=2, verbose_name='Количество интервалов в сутки')),
                ('adaptive_function', models.BooleanField(default=True, verbose_name='Адаптивная функция')),
                ('manual_mode', models.BooleanField(default=True, verbose_name='Ручной режим')),
                ('calculation_of_consumed_energy', models.BooleanField(default=True, verbose_name='Расчет потребленной энергии')),
            ],
            options={
                'verbose_name': 'Терморегулятор',
                'verbose_name_plural': '7. Терморегуляторы',
            },
        ),
        migrations.CreateModel(
            name='ThirdLevelCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=60, verbose_name='Название')),
                ('slug', models.SlugField(max_length=60, unique=True, verbose_name='Ссылка')),
                ('image', models.ImageField(upload_to='third_level_cat_photos', verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'Категория 3 уровня',
                'verbose_name_plural': '9.3 Категории 3 уровня',
            },
        ),
        migrations.CreateModel(
            name='ThermostatColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=60, verbose_name='Цвет')),
                ('color_code', models.CharField(default='#fff', max_length=60, verbose_name='Код цвета')),
                ('image', models.ImageField(upload_to='thermostat_images', verbose_name='Изображение')),
                ('thermostat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='color', to='shop.thermostat', verbose_name='Терморегулятор')),
            ],
            options={
                'verbose_name': 'Цвет',
                'verbose_name_plural': 'Цвета',
            },
        ),
        migrations.AddField(
            model_name='thermostat',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='thermostats', to='shop.thirdlevelcategory', verbose_name='Категория'),
        ),
        migrations.AddField(
            model_name='thermostat',
            name='product_offer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='thermostats', to='shop.productoffer', verbose_name='Предложение'),
        ),
        migrations.CreateModel(
            name='SwitchColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=60, verbose_name='Цвет')),
                ('color_code', models.CharField(default='#fff', max_length=60, verbose_name='Код цвета')),
                ('image', models.ImageField(upload_to='switch_images', verbose_name='Изображение')),
                ('switch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='color', to='shop.switch', verbose_name='Переключатель')),
            ],
            options={
                'verbose_name': 'Цвет',
                'verbose_name_plural': 'Цвета',
            },
        ),
        migrations.AddField(
            model_name='switch',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='switches', to='shop.thirdlevelcategory', verbose_name='Категория'),
        ),
        migrations.AddField(
            model_name='switch',
            name='product_offer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='switches', to='shop.productoffer', verbose_name='Предложение'),
        ),
        migrations.CreateModel(
            name='SocketColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=60, verbose_name='Цвет')),
                ('color_code', models.CharField(default='#fff', max_length=60, verbose_name='Код цвета')),
                ('image', models.ImageField(upload_to='socket_images', verbose_name='Изображение')),
                ('socket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='color', to='shop.socket', verbose_name='Розетка')),
            ],
            options={
                'verbose_name': 'Цвет',
                'verbose_name_plural': 'Цвета',
            },
        ),
        migrations.AddField(
            model_name='socket',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sockets', to='shop.thirdlevelcategory', verbose_name='Категория'),
        ),
        migrations.AddField(
            model_name='socket',
            name='product_offer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sockets', to='shop.productoffer', verbose_name='Предложение'),
        ),
        migrations.CreateModel(
            name='SecondLevelCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=60, verbose_name='Название')),
                ('slug', models.SlugField(max_length=60, unique=True, verbose_name='Ссылка')),
                ('image', models.ImageField(upload_to='second_level_cat_photos', verbose_name='Изображение')),
                ('category', models.ManyToManyField(blank=True, related_name='third_level_category', to='shop.ThirdLevelCategory', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Категория 2 уровня',
                'verbose_name_plural': '9.2 Категории 2 уровня',
            },
        ),
        migrations.CreateModel(
            name='PlugColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=60, verbose_name='Цвет')),
                ('color_code', models.CharField(default='#fff', max_length=60, verbose_name='Код цвета')),
                ('image', models.ImageField(upload_to='plug_images', verbose_name='Изображение')),
                ('plug', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='color', to='shop.plug', verbose_name='Заглушка')),
            ],
            options={
                'verbose_name': 'Цвет',
                'verbose_name_plural': 'Цвета',
            },
        ),
        migrations.AddField(
            model_name='plug',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plugs', to='shop.thirdlevelcategory', verbose_name='Категория'),
        ),
        migrations.AddField(
            model_name='plug',
            name='product_offer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plugs', to='shop.productoffer', verbose_name='Предложение'),
        ),
        migrations.CreateModel(
            name='NetworkFilterColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=60, verbose_name='Цвет')),
                ('color_code', models.CharField(default='#fff', max_length=60, verbose_name='Код цвета')),
                ('image', models.ImageField(upload_to='networkfilter_images', verbose_name='Изображение')),
                ('network_filter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='color', to='shop.networkfilter', verbose_name='Сетевой фильтр')),
            ],
            options={
                'verbose_name': 'Цвет',
                'verbose_name_plural': 'Цвета',
            },
        ),
        migrations.AddField(
            model_name='networkfilter',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='network_filters', to='shop.thirdlevelcategory', verbose_name='Категория'),
        ),
        migrations.AddField(
            model_name='networkfilter',
            name='product_offer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='network_filters', to='shop.productoffer', verbose_name='Предложение'),
        ),
        migrations.CreateModel(
            name='FrameColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=60, verbose_name='Цвет')),
                ('color_code', models.CharField(default='#fff', max_length=60, verbose_name='Код цвета')),
                ('image', models.ImageField(upload_to='frame_images', verbose_name='Изображение')),
                ('frame', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='color', to='shop.frame', verbose_name='Рамка')),
            ],
            options={
                'verbose_name': 'Цвет',
                'verbose_name_plural': 'Цвета',
            },
        ),
        migrations.AddField(
            model_name='frame',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='frames', to='shop.thirdlevelcategory', verbose_name='Категория'),
        ),
        migrations.AddField(
            model_name='frame',
            name='product_offer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='frames', to='shop.productoffer', verbose_name='Предложение'),
        ),
        migrations.CreateModel(
            name='FirstLevelCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=60, verbose_name='Название')),
                ('slug', models.SlugField(max_length=60, unique=True, verbose_name='Ссылка')),
                ('image', models.ImageField(upload_to='first_level_cat_photos', verbose_name='Изображение')),
                ('category', models.ManyToManyField(blank=True, related_name='second_level_category', to='shop.SecondLevelCategory', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Категория 1 уровня',
                'verbose_name_plural': '9.1 Категории 1 уровня',
            },
        ),
        migrations.CreateModel(
            name='DimmerColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=60, verbose_name='Цвет')),
                ('color_code', models.CharField(default='#fff', max_length=60, verbose_name='Код цвета')),
                ('image', models.ImageField(upload_to='dimmer_images', verbose_name='Изображение')),
                ('dimmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='color', to='shop.dimmer', verbose_name='Диммер')),
            ],
            options={
                'verbose_name': 'Цвет',
                'verbose_name_plural': 'Цвета',
            },
        ),
        migrations.AddField(
            model_name='dimmer',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dimmers', to='shop.thirdlevelcategory', verbose_name='Категория'),
        ),
        migrations.AddField(
            model_name='dimmer',
            name='product_offer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dimmers', to='shop.productoffer', verbose_name='Предложение'),
        ),
        migrations.CreateModel(
            name='ComputerSocketColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=60, verbose_name='Цвет')),
                ('color_code', models.CharField(default='#fff', max_length=60, verbose_name='Код цвета')),
                ('image', models.ImageField(upload_to='computer_socket_images', verbose_name='Изображение')),
                ('computer_socket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='color', to='shop.computersocket', verbose_name='Компьютерная розетка')),
            ],
            options={
                'verbose_name': 'Цвет',
                'verbose_name_plural': 'Цвета',
            },
        ),
        migrations.AddField(
            model_name='computersocket',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='computer_sockets', to='shop.thirdlevelcategory', verbose_name='Категория'),
        ),
        migrations.AddField(
            model_name='computersocket',
            name='product_offer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='computer_sockets', to='shop.productoffer', verbose_name='Предложение'),
        ),
        migrations.CreateModel(
            name='CollectionColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=60, verbose_name='Цвет')),
                ('color_code', models.CharField(default='#fff', max_length=60, verbose_name='Код цвета')),
                ('image', models.ImageField(upload_to='collection_images', verbose_name='Изображение')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='color', to='shop.collection', verbose_name='Коллекция')),
            ],
            options={
                'verbose_name': 'Цвет',
                'verbose_name_plural': 'Цвета',
            },
        ),
        migrations.AddField(
            model_name='collection',
            name='coolection_offer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collection', to='shop.collectionoffer', verbose_name='Предложение'),
        ),
    ]
